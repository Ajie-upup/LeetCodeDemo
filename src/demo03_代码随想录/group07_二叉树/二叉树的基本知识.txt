二叉树的种类
1. 满二叉树
2. 完全二叉树（堆）
3. 二叉搜索树（左节点都比根节点要小，右节点都比根节点要大）
4. 平衡二叉搜索树（在二叉树的基础上，左右两个子树的高度差的绝对值不超过1）

二叉树的存储方式
1. 链式存储（含左右指针的链表）
2. 顺序存储（数组，数组下标是 i，那么它的左孩子就是 i * 2 + 1，右孩子就是 i * 2 + 2）

二叉树的遍历方式
1. 广度优先遍历
    - 层次遍历
2. 深度优先遍历
    - 先序遍历
    - 中序遍历
    - 后序遍历

二叉树的递归遍历
public void preorder(TreeNode root, List<Integer> result) {
        if (root == null) {
            return;
        }
        result.add(root.val);
        preorder(root.left, result);
        preorder(root.right, result);
    }

二叉树的层次遍历
public void checkFun02(TreeNode node) {
        if (node == null) return;
        Queue<TreeNode> que = new LinkedList<TreeNode>();
        que.offer(node);

        while (!que.isEmpty()) {
            List<Integer> itemList = new ArrayList<Integer>();
            int len = que.size();

            while (len > 0) {
                TreeNode tmpNode = que.poll();
                itemList.add(tmpNode.val);

                if (tmpNode.left != null) que.offer(tmpNode.left);
                if (tmpNode.right != null) que.offer(tmpNode.right);
                len--;
            }

            resList.add(itemList);
        }

    }